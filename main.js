(()=>{"use strict";var n={169:(n,r,A)=>{A.d(r,{Z:()=>a});var t=A(15),e=A.n(t),o=A(645),i=A.n(o)()(e());i.push([n.id,'*{padding:0;margin:0;box-sizing:border-box;font-family:"Quicksand",sans-serif}a{color:#343a40;text-decoration:none;transition:.4s}a:hover{color:#22c4b0}img{max-width:100%;display:block;height:auto;object-fit:cover}.blueText{color:#22c4b0}#burger{position:fixed;right:0;top:0;color:#fff;background:linear-gradient(45deg, #9682C8 10%, #05BCC9);font-size:32px;padding:16px 16px 32px 32px;border-radius:0% 0% 0% 100%;transition:1s;cursor:pointer}#quit{position:fixed;top:0;color:#fff;font-size:32px;padding:16px;display:none;cursor:pointer}#links{display:none;flex-direction:column;width:100vw;height:50vh;padding:25vh 0;justify-content:space-around}#links a{text-align:center;text-decoration:none;color:#fff;font-size:2em;font-family:"Roboto";z-index:10}.navigbar{display:flex;justify-content:space-between;align-items:center;padding-right:2%;margin-left:2%;margin-right:15%;padding-top:1%;padding-bottom:1%;flex-wrap:nowrap}.homeName{width:50%}.navigbar2{display:flex;flex-wrap:nowrap;flex-direction:row;justify-content:space-around}.navigbar2 a{margin-left:7%}.img-cont{height:10%;margin-bottom:3%}.homeMainImg{height:1%;margin-bottom:2%}.section2Img{position:relative}.mainImgTxt{position:absolute;top:40%;left:20%}.mainImgTxt p{font-size:4vw;font-weight:900}.mainImgBtn{padding:1% 3%;position:absolute;top:50%;left:45%;border-style:solid;color:#343a40;background-color:#22c4b0;border-width:1px;border-radius:5px}.mainImgBtn:hover{background-color:transparent;color:#343a40}.section3{display:grid;grid-template-columns:1fr 1fr 1fr;gap:10%;width:80%;margin:auto;margin-bottom:4%}.section3 ul{list-style:none}.sec3Grid h4{color:#22c4b0;font-weight:bold}.sec3ListStyle{color:#22c4b0;padding-right:6px}.section4{display:grid;grid-template-columns:1fr 1fr 1fr;gap:3%;margin:auto;width:90%;margin-bottom:2%}.vodooImages{transition:.6s}.vodooImages:hover{background-color:#343a40;cursor:pointer;opacity:.6}.section5{background-color:#22c4b0;height:100%;padding-top:10%;padding-bottom:10%}.about{width:70%;margin:auto}.about{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;height:100%}.about h4,.about p{margin-bottom:5%;color:#fff;line-height:30px}.about p{font-weight:900}.about h4{font-size:3vw}.about a{padding:1% 3%;border-style:solid;color:#fff;border-width:1px;border-radius:5px;transition:.6s}.about a:hover{background-color:transparent;color:#343a40}.section6{background-color:#343a40;padding-top:3%;padding-bottom:3%}footer p{width:70%;margin:auto;color:#fff;text-align:center}.spellsHead{color:#22c4b0;font-size:40px;text-align:center;font-weight:900;border-style:solid;padding:.5% 1%;width:20%;margin:auto;margin-bottom:2%;border-color:#343a40;border-width:1px}.spellsHead:hover{cursor:pointer}@media screen and (min-width: 450px)and (max-width: 768px){.section3{display:flex;flex-direction:column}.section4{display:flex;flex-direction:column}.section4 p{margin-bottom:5%}.spellsHead{width:50%}}@media screen and (max-width: 450px){.section3{display:flex;flex-direction:column}.section4{display:flex;flex-direction:column;width:100%}.section4 p{margin-bottom:5%}.spellsHead{width:50%;font-size:20px;margin-top:4%;margin-bottom:4%}}',"",{version:3,sources:["webpack://./src/main.scss"],names:[],mappings:"AAGA,EACI,SAAA,CACA,QAAA,CACA,qBAAA,CACA,kCAAA,CAOJ,EACI,aAdQ,CAeR,oBAAA,CACA,cAAA,CACA,QACI,aAjBG,CAsBX,IACI,cAAA,CACA,aAAA,CACA,WAAA,CACA,gBAAA,CAIF,UACI,aA/BK,CAkCT,QACE,cAAA,CACA,OAAA,CACA,KAAA,CACA,UAAA,CACA,uDAAA,CACA,cAAA,CACA,2BAAA,CACA,2BAAA,CACA,aAAA,CACA,cAAA,CAGF,MACE,cAAA,CACA,KAAA,CACA,UAAA,CACA,cAAA,CACA,YAAA,CACA,YAAA,CACA,cAAA,CAGF,OACE,YAAA,CACA,qBAAA,CACA,WAAA,CACA,WAAA,CACA,cAAA,CACA,4BAAA,CAGF,SACE,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,aAAA,CACA,oBAAA,CACA,UAAA,CAGJ,UACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,gBAAA,CACA,cAAA,CACA,gBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGJ,UACI,SAAA,CAGJ,WACI,YAAA,CACA,gBAAA,CACA,kBAAA,CACA,4BAAA,CACA,aACI,cAAA,CAKR,UACI,UAAA,CAEA,gBAAA,CAGJ,aAEA,SAAA,CACI,gBAAA,CAGJ,aACI,iBAAA,CAEJ,YACI,iBAAA,CACJ,OAAA,CACA,QAAA,CACI,cAEJ,aAAA,CACA,eAAA,CAKA,YACI,aAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,kBAAA,CACA,aAxIQ,CAyIR,wBAxIO,CAyIP,gBAAA,CACA,iBAAA,CAEA,kBACI,4BAAA,CACA,aA/II,CAoJZ,UACI,YAAA,CACA,iCAAA,CACA,OAAA,CACA,SAAA,CACA,WAAA,CACA,gBAAA,CACA,aACI,eAAA,CAKJ,aACI,aAjKG,CAkKH,gBAAA,CAIR,eACG,aAvKQ,CAwKR,iBAAA,CAGH,UACI,YAAA,CACA,iCAAA,CACA,MAAA,CACA,WAAA,CACA,SAAA,CACA,gBAAA,CAGJ,aACI,cAAA,CAEA,mBACI,wBAzLI,CA0LJ,cAAA,CACA,UAAA,CAIR,UACI,wBA/LO,CAgMP,WAAA,CACA,eAAA,CACA,kBAAA,CAGJ,OACI,SAAA,CACA,WAAA,CAGJ,OACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,WAAA,CACA,mBACI,gBAAA,CACA,UAAA,CACA,gBAAA,CAGJ,SACI,eAAA,CAIJ,UACI,aAAA,CAGJ,SACA,aAAA,CACA,kBAAA,CACA,UAAA,CACA,gBAAA,CACA,iBAAA,CACA,cAAA,CAEA,eACI,4BAAA,CACA,aA3OI,CAiPZ,UACI,wBAlPQ,CAmPR,cAAA,CACA,iBAAA,CAIA,SACI,SAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CASR,YACI,aArQO,CAsQP,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,cAAA,CACA,SAAA,CACA,WAAA,CACA,gBAAA,CACA,oBA/QQ,CAgRR,gBAAA,CAEA,kBACI,cAAA,CAQR,2DACI,UACI,YAAA,CACA,qBAAA,CAGJ,UACI,YAAA,CACA,qBAAA,CACA,YACI,gBAAA,CAIR,YACI,SAAA,CAAA,CAIR,qCACI,UACI,YAAA,CACA,qBAAA,CAIJ,UACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,YACI,gBAAA,CAKR,YACI,SAAA,CACA,cAAA,CACA,aAAA,CACA,gBAAA,CAAA",sourcesContent:["\r\n$black-col: #343A40;\r\n$blue-col: #22C4B0;\r\n* {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Quicksand', sans-serif;\r\n}\r\nbody,html {\r\n    \r\n}\r\n\r\n\r\na {\r\n    color: $black-col;\r\n    text-decoration: none;\r\n    transition: .4s;\r\n    &:hover {\r\n        color: $blue-col;\r\n        \r\n    }\r\n}\r\n\r\nimg {\r\n    max-width: 100%;\r\n    display: block;\r\n    height: auto;\r\n    object-fit: cover;\r\n    \r\n  }\r\n\r\n  .blueText {\r\n      color: $blue-col;\r\n  }\r\n\r\n  #burger{\r\n    position: fixed;\r\n    right: 0;\r\n    top: 0;\r\n    color: white;\r\n    background: linear-gradient(45deg, #9682C8 10%, #05BCC9);;\r\n    font-size: 32px;\r\n    padding: 16px 16px 32px 32px;\r\n    border-radius: 0% 0% 0% 100%;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  #quit{\r\n    position: fixed;\r\n    top: 0;\r\n    color: white;\r\n    font-size: 32px;\r\n    padding: 16px;\r\n    display: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  #links{\r\n    display: none;\r\n    flex-direction: column;\r\n    width: 100vw;\r\n    height: 50vh;\r\n    padding: 25vh 0;\r\n    justify-content: space-around;\r\n  }\r\n  \r\n  #links a{\r\n    text-align: center;\r\n    text-decoration: none;\r\n    color: white;\r\n    font-size: 2em;\r\n    font-family: 'Roboto';\r\n    z-index: 10;\r\n  }\r\n\r\n.navigbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 2%;\r\n    margin-left: 2%;\r\n    margin-right: 15%;\r\n    padding-top: 1%;\r\n    padding-bottom: 1%;\r\n    flex-wrap: nowrap;\r\n    \r\n}\r\n.homeName {\r\n    width: 50%;\r\n}\r\n\r\n.navigbar2 { \r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    a{\r\n        margin-left: 7%;\r\n    }\r\n    \r\n}\r\n\r\n.img-cont {\r\n    height: 10%;\r\n   \r\n    margin-bottom: 3%;\r\n}\r\n\r\n.homeMainImg {\r\n    \r\nheight: 1%;\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.section2Img {\r\n    position: relative;\r\n}\r\n.mainImgTxt {\r\n    position: absolute;\r\ntop: 40%;\r\nleft: 20%;\r\n    p{\r\n\r\nfont-size: 4vw;\r\nfont-weight: 900;\r\n    }\r\n  \r\n\r\n}\r\n.mainImgBtn{\r\n    padding: 1% 3%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 45%;\r\n    border-style: solid;\r\n    color: $black-col;\r\n    background-color: $blue-col;\r\n    border-width: 1px;\r\n    border-radius: 5px;\r\n    \r\n    &:hover {\r\n        background-color: transparent;\r\n        color: $black-col;\r\n\r\n    }\r\n}\r\n\r\n.section3 {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 10%;\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-bottom: 4%;\r\n    ul {\r\n        list-style: none;\r\n    }\r\n}\r\n\r\n.sec3Grid {\r\n    h4 {\r\n        color: $blue-col;\r\n        font-weight: bold;\r\n    }\r\n}\r\n\r\n.sec3ListStyle {\r\n   color: $blue-col;\r\n   padding-right: 6px;\r\n}\r\n\r\n.section4 {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 3%;\r\n    margin: auto;\r\n    width: 90%;\r\n    margin-bottom: 2%;\r\n}\r\n\r\n.vodooImages {\r\n    transition: .6s;\r\n    \r\n    &:hover {\r\n        background-color: $black-col;\r\n        cursor: pointer;\r\n        opacity: 0.6;\r\n    }\r\n}\r\n\r\n.section5 {\r\n    background-color: $blue-col;\r\n    height: 100%;\r\n    padding-top: 10%;\r\n    padding-bottom: 10%;\r\n}\r\n\r\n.about {\r\n    width: 70%;\r\n    margin: auto;\r\n}\r\n\r\n.about {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    height: 100%;\r\n    h4,p {\r\n        margin-bottom: 5%;\r\n        color: white;\r\n        line-height: 30px;\r\n    }\r\n\r\n    p {\r\n        font-weight: 900;\r\n\r\n    }\r\n\r\n    h4 {\r\n        font-size: 3vw;\r\n    }\r\n\r\n    a {\r\n    padding: 1% 3%;\r\n    border-style: solid;\r\n    color: white;\r\n    border-width: 1px;\r\n    border-radius: 5px;\r\n    transition: .6s;\r\n    \r\n    &:hover {\r\n        background-color: transparent;\r\n        color: $black-col;\r\n\r\n    }\r\n    }\r\n}\r\n\r\n.section6 {\r\n    background-color: $black-col;\r\n    padding-top: 3%;\r\n    padding-bottom: 3%;\r\n}\r\n\r\nfooter {\r\n    p {\r\n        width: 70%;\r\n        margin: auto;\r\n        color: white;\r\n        text-align: center;\r\n\r\n    }\r\n}\r\n\r\n// Traditional healer page\r\n\r\n// spells page\r\n\r\n.spellsHead {\r\n    color: $blue-col;\r\n    font-size: 40px;\r\n    text-align: center;\r\n    font-weight: 900;\r\n    border-style: solid;\r\n    padding:0.5% 1%;\r\n    width: 20%;\r\n    margin: auto;\r\n    margin-bottom: 2%;\r\n    border-color: $black-col;\r\n    border-width: 1px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n@media screen and (min-width: 450px) and (max-width: 768px) {\r\n    .section3 {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .section4 {\r\n        display: flex;\r\n        flex-direction: column;\r\n        p {\r\n            margin-bottom: 5%;\r\n        }\r\n    }\r\n\r\n    .spellsHead {\r\n        width: 50%;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 450px) {\r\n    .section3 {\r\n        display: flex;\r\n        flex-direction: column;\r\n        \r\n    }\r\n\r\n    .section4 {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        p {\r\n            margin-bottom: 5%;\r\n        }\r\n        \r\n    }\r\n\r\n    .spellsHead {\r\n        width: 50%;\r\n        font-size: 20px;\r\n        margin-top: 4%;\r\n        margin-bottom: 4%;\r\n    }\r\n    \r\n    \r\n}"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var A=n(r);return r[2]?"@media ".concat(r[2]," {").concat(A,"}"):A})).join("")},r.i=function(n,A,t){"string"==typeof n&&(n=[[null,n,""]]);var e={};if(t)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(e[i]=!0)}for(var a=0;a<n.length;a++){var c=[].concat(n[a]);t&&e[c[0]]||(A&&(c[2]?c[2]="".concat(A," and ").concat(c[2]):c[2]=A),r.push(c))}},r}},15:n=>{function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var A=0,t=new Array(r);A<r;A++)t[A]=n[A];return t}n.exports=function(n){var A,t,e=(t=4,function(n){if(Array.isArray(n))return n}(A=n)||function(n,r){var A=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=A){var t,e,o=[],i=!0,a=!1;try{for(A=A.call(n);!(i=(t=A.next()).done)&&(o.push(t.value),!r||o.length!==r);i=!0);}catch(n){a=!0,e=n}finally{try{i||null==A.return||A.return()}finally{if(a)throw e}}return o}}(A,t)||function(n,A){if(n){if("string"==typeof n)return r(n,A);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,A):void 0}}(A,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=e[1],i=e[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),l="/*# ".concat(c," */"),C=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[o].concat(C).concat([l]).join("\n")}return[o].join("\n")}},379:(n,r,A)=>{var t,e=function(){var n={};return function(r){if(void 0===n[r]){var A=document.querySelector(r);if(window.HTMLIFrameElement&&A instanceof window.HTMLIFrameElement)try{A=A.contentDocument.head}catch(n){A=null}n[r]=A}return n[r]}}(),o=[];function i(n){for(var r=-1,A=0;A<o.length;A++)if(o[A].identifier===n){r=A;break}return r}function a(n,r){for(var A={},t=[],e=0;e<n.length;e++){var a=n[e],c=r.base?a[0]+r.base:a[0],l=A[c]||0,C="".concat(c," ").concat(l);A[c]=l+1;var d=i(C),s={css:a[1],media:a[2],sourceMap:a[3]};-1!==d?(o[d].references++,o[d].updater(s)):o.push({identifier:C,updater:g(s,r),references:1}),t.push(C)}return t}function c(n){var r=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var o=A.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(n){r.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(r);else{var i=e(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}return r}var l,C=(l=[],function(n,r){return l[n]=r,l.filter(Boolean).join("\n")});function d(n,r,A,t){var e=A?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=C(r,e);else{var o=document.createTextNode(e),i=n.childNodes;i[r]&&n.removeChild(i[r]),i.length?n.insertBefore(o,i[r]):n.appendChild(o)}}function s(n,r,A){var t=A.css,e=A.media,o=A.sourceMap;if(e?n.setAttribute("media",e):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var p=null,u=0;function g(n,r){var A,t,e;if(r.singleton){var o=u++;A=p||(p=c(r)),t=d.bind(null,A,o,!1),e=d.bind(null,A,o,!0)}else A=c(r),t=s.bind(null,A,r),e=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(A)};return t(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t(n=r)}else e()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var A=a(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<A.length;t++){var e=i(A[t]);o[e].references--}for(var c=a(n,r),l=0;l<A.length;l++){var C=i(A[l]);0===o[C].references&&(o[C].updater(),o.splice(C,1))}A=c}}}}},r={};function A(t){var e=r[t];if(void 0!==e)return e.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,A),o.exports}A.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return A.d(r,{a:r}),r},A.d=(n,r)=>{for(var t in r)A.o(r,t)&&!A.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},A.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n=A(379),r=A.n(n),t=A(169);r()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;var e=document.getElementById("burger"),o=document.getElementById("links"),i=document.getElementById("quit");e.addEventListener("click",(function(){e.style.padding="16px 16px 200vw 200vw",o.style.display="flex",i.style.display="inline"})),i.addEventListener("click",(function(){e.style.padding="16px 16px 32px 32px",o.style.display="none",i.style.display="none"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,